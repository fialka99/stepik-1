#include <iostream>
#include <Windows.h>
#include <string>
#include <fstream>
using namespace std;
string Replacement(string);
void print(string);
void LinearSearch(string, string);
void Task5(string);
void print(string str) {
	cout << str << endl << endl;
}
int main()
{
	//1) вводим строку
	cout << "\t" << "task1" << endl;
	setlocale(0, "");
	int number;
	cout << "Choose how to read the text: '1' from the keyboard or '2' from the file:";
	cin >> number;
	string str;
	if (number == 1) {
		getline(cin, str);
		getline(cin, str);
	}
	cout << endl;
	string str1 = str;
	//удалим все лишние пробелы
	cout << "\t" << "task2" << endl;
	int len = str.length();
	while (str[0] == ' ')
		str.erase(0, 1);
	len = str.length();
	while (str[len - 2] == ' ')
		str.erase(len - 2, 1);

	len = str.length();
	int count = 0;
	for (int i = 0; i < len - 1 - count; i++) {
		if (str[i] == ' ' && str[i + 1] == ' ') {
			str.erase(i, 1);
			--i;
			++count;
		}
	}
	len = str.length();
	cout << "Без лишних пробелов:" << endl << str << endl;
	count = 0;
	for (int i = 0; i < len - 1 - count; i++) {
		if ((int(str[i]) >= 33 && int(str[i]) <= 47 && str[i] == str[i + 1]) || ((int(str[i]) >= 58 && int(str[i]) <= 63 && str[i] == str[i + 1]))) {
			str.erase(i, 1);
			--i;
			++count;
		}
	}
	cout << endl;
	len = str.length();
	cout << "Без лишних знаков припинания: " << endl << str << endl;
	//исправление регистра
	for (int i = 0; i < len; i++) {
		if (int(str[i]) >= 65 && int(str[i]) <= 90)
			str[i] += 32;
	}
	cout << "С нижним регистром символов: " << endl << str << endl;
	cout << "\t" << "task3" << endl;
	//1 вариант(Вывести на экран слова последовательности в обратном порядке)
	str = Replacement(str);
	print(str);
	//4 задание(Вывести на экран ту же последовательность, заменив во всех словах первую букву соответствующей прописной буквой)
	cout << "\t" << "task4:" << endl;
	cout << "искомая строка: " << endl << str1 << endl << "Cтрока,в которой первая буква у всех слов заменена на прописную :" << endl;;
	len = str1.length();
	char ch;
	char ly;
	ch = tolower(str1[0]);
	cout << ch;
	for (int i = 1; i < len; i++) {
		ly = str1[i];
		if (str1[i - 1] == ' ') {
			ly = tolower(str1[i]);
			
		}
		cout << ly;
	}
	//5 задание
	Task5(str1);

}
string Replacement(string str)
{
	int len = str.length();
	for (int i = 0; i < len / 2; i++)
	{
		char temp = str[i];
		str[i] = str[len - i - 1];
		str[len - i - 1] = temp;
	}
	for (int i = 0, j = 0; i <= len; ++i, ++j)
		if (str[i] == ' ' || str[i] == '\0')
		{
			for (int t = 0; t < j / 2; ++t)
			{
				char temp = str[i - t - 1];
				str[i - t - 1] = str[i - j + t];
				str[i - j + t] = temp;
			}
			++i;
			j = 0;
		}
	return(str);
}
void LinearSearch(string str1, string sub) {
	cout << endl;
	int len = str1.length();
	int s_len = sub.length();
	bool include = 0;
	for (int i = 0; i < len - s_len + 1; i++) {
		if (str1[i] == sub[0]) {
			int count = 1;
			for (int j = 1; j < s_len; j++) {
				if (str1[i + j] == sub[j])
					++count;
			}
			if (count == s_len) {
				cout << i << " ";
				include = 1;
			}
		}
	}
	switch (include) {
	case 0:
		cout << "Такой подстроки нет в строке.\n";
		break;
	case 1:
		cout << "- индекс(-ы) подстроки.\n";
		break;
	}
}
void Task5(string str1) {
	cout << "\n\t\t\tЗадание 5\n";
	string sub;
	cout << "Введите искомую подстроку:\n";
	getline(cin, sub);
	LinearSearch(str1, sub);

}
